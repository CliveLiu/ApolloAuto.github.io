digraph "apollo::perception::ConcurrentQueue&lt; Data &gt;"
{
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  Node2 [label="{apollo::perception\l::ConcurrentQueue\< Data \>\n|# _queue\l|+ ConcurrentQueue()\l+ ~ConcurrentQueue()\l+ push()\l+ pop()\l+ try_pop()\l+ empty()\l+ size()\l+ clear()\l}",height=0.2,width=0.4,color="black", fillcolor="grey75", style="filled", fontcolor="black"];
  Node3 -> Node2 [color="grey25",fontsize="10",style="solid",label=" #_mutex" ,arrowhead="odiamond",fontname="Helvetica"];
  Node3 [label="{apollo::perception\l::Mutex\n||+ Mutex()\l+ ~Mutex()\l+ Lock()\l+ Unlock()\l+ TryLock()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classapollo_1_1perception_1_1Mutex.html"];
  Node4 -> Node2 [color="grey25",fontsize="10",style="solid",label=" #_condition_variable" ,arrowhead="odiamond",fontname="Helvetica"];
  Node4 [label="{apollo::perception\l::CondVar\n||+ CondVar()\l+ ~CondVar()\l+ Wait()\l+ Signal()\l+ Signalall()\l}",height=0.2,width=0.4,color="black", fillcolor="white", style="filled",URL="$classapollo_1_1perception_1_1CondVar.html"];
}
